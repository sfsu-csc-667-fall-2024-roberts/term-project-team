<%- include('partials/header') %>

<div class="lobby-container">
  <div class="lobby-header">
    <h1>Monopoly Online - Game Lobby</h1>
    <p class="lobby-subtitle">Create a new game or join an existing one</p>
  </div>

  <div class="lobby-content">
    <div class="create-game-section">
      <div class="section-header">
        <h2>Create New Game</h2>
        <p class="section-description">Customize your game settings</p>
      </div>

      <form id="createGameForm" class="create-game-form">
        <div class="form-group">
          <label for="bot-count">Number of Bot Players</label>
          <select name="botCount" id="bot-count" class="form-control" onchange="toggleBotOptions(this.value)">
            <option value="0">No Bots</option>
            <option value="1">1 Bot</option>
            <option value="2">2 Bots</option>
            <option value="3">3 Bots</option>
          </select>
          <small class="form-text">Choose how many AI opponents you want to play against</small>
        </div>

        <div id="bot-options" style="display: none;">
          <div class="form-group">
            <label>Bot Difficulty</label>
            <div class="radio-group bot-difficulty-options">
              <label class="radio-card">
                <input type="radio" name="botDifficulty" value="easy" checked>
                <span class="radio-content">
                  <span class="radio-title">Easy</span>
                  <span class="radio-description">Recommended for casual players</span>
                </span>
              </label>
              <label class="radio-card">
                <input type="radio" name="botDifficulty" value="medium">
                <span class="radio-content">
                  <span class="radio-title">Medium</span>
                  <span class="radio-description">Balanced AI behavior</span>
                </span>
              </label>
              <label class="radio-card">
                <input type="radio" name="botDifficulty" value="hard">
                <span class="radio-content">
                  <span class="radio-title">Hard</span>
                  <span class="radio-description">For experienced players</span>
                </span>
              </label>
            </div>
          </div>

          <div class="form-group">
            <label>Bot Strategy</label>
            <div class="radio-group bot-strategy-options">
              <label class="radio-card">
                <input type="radio" name="botStrategy" value="balanced" checked>
                <span class="radio-content">
                  <span class="radio-title">Balanced</span>
                  <span class="radio-description">Makes well-rounded decisions</span>
                </span>
              </label>
              <label class="radio-card">
                <input type="radio" name="botStrategy" value="aggressive">
                <span class="radio-content">
                  <span class="radio-title">Aggressive</span>
                  <span class="radio-description">Focuses on buying and building</span>
                </span>
              </label>
              <label class="radio-card">
                <input type="radio" name="botStrategy" value="conservative">
                <span class="radio-content">
                  <span class="radio-title">Conservative</span>
                  <span class="radio-description">Plays it safe, saves money</span>
                </span>
              </label>
            </div>
          </div>
        </div>

        <button type="submit" class="btn btn-primary create-game-btn">
          <span class="btn-icon">üéÆ</span>
          Create Game
        </button>
      </form>
    </div>

    <div class="games-section">
      <div class="section-header">
        <h2>Available Games</h2>
        <p class="section-description">Join an existing game session</p>
      </div>

      <div class="games-list">
        <% if (games && games.length > 0) { %>
          <% games.forEach(game => { %>
            <div class="game-card <%= game.joinable ? 'joinable' : '' %>">
              <div class="game-info">
                <div class="game-header">
                  <h3>Game #<%= game.id %></h3>
                  <span class="game-status <%= game.status.toLowerCase() %>">
                    <%= game.status.charAt(0).toUpperCase() + game.status.slice(1).toLowerCase() %>
                  </span>
                </div>
                <div class="game-details">
                  <div class="player-count">
                    <span class="detail-icon">üë•</span>
                    <span class="detail-text">
                      <%= game.human_count %> human<%= game.human_count !== 1 ? 's' : '' %>, 
                      <%= game.bot_count %> bot<%= game.bot_count !== 1 ? 's' : '' %>
                    </span>
                  </div>
                  <div class="total-players">
                    <span class="detail-icon">üé≤</span>
                    <span class="detail-text"><%= game.player_count %>/4 players</span>
                  </div>
                </div>
                <div class="game-actions">
                  <% if (game.canJoin) { %>
                    <button onclick="joinGame(<%- game.id %>)" class="btn btn-primary join-game-btn">
                      <span class="btn-icon">‚û°Ô∏è</span>
                      Join Game
                    </button>
                  <% } %>
                  <% if (game.isOwner) { %>
                    <button onclick="deleteGame(<%- game.id %>)" class="btn btn-danger delete-game-btn">
                      <span class="btn-icon">üóëÔ∏è</span>
                      Delete Game
                    </button>
                  <% } %>
                  <% if (game.canLeave) { %>
                    <button onclick="leaveGame(<%- game.id %>)" class="btn btn-secondary leave-game-btn">
                      <span class="btn-icon">üö™</span>
                      Leave Game
                    </button>
                  <% } %>
                  <% if (game.isPlayerInGame && game.status === 'in-progress') { %>
                    <a href="/game/<%- game.id %>" class="btn btn-primary play-game-btn">
                      <span class="btn-icon">üéÆ</span>
                      Play Game
                    </a>
                  <% } %>
                </div>
              </div>
            </div>
          <% }); %>
        <% } else { %>
          <div class="no-games">
            <span class="no-games-icon">üé≤</span>
            <p>No games available</p>
            <p class="no-games-subtitle">Create a new game to start playing!</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<script>
async function joinGame(gameId) {
    try {
        const response = await fetch(`/lobby/games/${gameId}/join`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            window.location.href = `/game/${gameId}/play`;
        } else {
            const error = await response.json();
            alert(error.error || 'Failed to join game');
        }
    } catch (error) {
        console.error('Error joining game:', error);
        alert('Failed to join game');
    }
}

async function leaveGame(gameId) {
    try {
        const response = await fetch(`/lobby/games/${gameId}/leave`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            window.location.reload();
        } else {
            const error = await response.json();
            alert(error.message || 'Failed to leave game');
        }
    } catch (error) {
        console.error('Error leaving game:', error);
        alert('Failed to leave game');
    }
}

async function deleteGame(gameId) {
    if (!confirm('Are you sure you want to delete this game?')) {
        return;
    }

    try {
        const response = await fetch(`/lobby/games/${gameId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            window.location.reload();
        } else {
            const error = await response.json();
            alert(error.message || 'Failed to delete game');
        }
    } catch (error) {
        console.error('Error deleting game:', error);
        alert('Failed to delete game');
    }
}

document.getElementById('createGameForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const data = {
        maxPlayers: 4,
        botCount: parseInt(formData.get('botCount')),
        botDifficulty: formData.get('botDifficulty'),
        botStrategy: formData.get('botStrategy')
    };

    try {
        const response = await fetch('/lobby/games', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            window.location.reload();
        } else {
            const error = await response.json();
            alert(error.message || 'Failed to create game');
        }
    } catch (error) {
        console.error('Error creating game:', error);
        alert('Failed to create game');
    }
});

function toggleBotOptions(value) {
    const botOptions = document.getElementById('bot-options');
    botOptions.style.display = value === '0' ? 'none' : 'block';
}
</script>

<%- include('partials/footer') %>